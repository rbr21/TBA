import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent; //class for button methods, use instance 'e' for this
import java.awt.event.ActionListener; //class for actions when button clicking
import java.awt.event.KeyEvent; //class for keystroke methods, use instance 'e' for this
import java.awt.event.KeyListener; //class for receiving keystrokes
import java.util.Timer;

import javax.swing.JPanel;

public class Gameplay extends JPanel implements KeyListener, ActionListener {
	private boolean play = false; //so the game doesn't play automatically
	private int score = 0;
	
	private int totalBricks = 21;
	
	private Timer timer;  // for how fast the ball moves
	private int delay = 8;
	
	private int playerX = 310; // player starting position
	
	private int ballposX = 120; // ball starting position
	private int ballposY = 350;
	private int ballXdir = -1;
	private int ballYdir = -2;
	
	//this is a constructor
	public Gameplay() {
		addKeyListener(this);
		setFocusable(true);
		setFocusTraversalKeysEnabled(false);
		timer = new Timer(delay, this);
		timer.start();	
	}
	
	//this method is used to create the slider, tiles, ball etc.
	public void paint(Graphics g) {
		//background
		g.setColor(Color.black);
		g.fillRect(1, y, 692, 592);
		
		//border
		g.setColor(Color.yellow);
		g.fillRect(0, 0, 3, 592); // border across top
		g.fillRect(0, 0, 692, 3); // border down on left
		g.fillRect(691, 0, 3, 592); // border down on right
		
		// the paddle
		g.setColor(Color.green);
		g.fillRect(playerX, 550, 100, 8);
		
		// the ball
		g.setColor(Color.yellow);
		g.fillRect(ballposX, ballposY, 20, 20);

	}
	
	@Override
	public void actionPerformed(ActionEvent e) {
	}

	// the following 2 methods are not used but are kept in because an error occurs 
	// if they are not
	@Override
	public void keyTyped(KeyEvent e) {}
	@Override
	public void keyReleased(KeyEvent e) {}
	
	// this used to detect the arrow keys
	@Override
	public void keyPressed(KeyEvent e) {
		if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			if (playerX >= 600) { // ensures the player doesn't go over the x boundary
				playerX = 600;
			} else {
				moveRight();
			}
		}
		if(e.getKeyCode() == KeyEvent.VK_LEFT) {
			if (playerX < 10) { // ensures the player doesn't go over the y boundary
				playerX = 10;
			} else {
				moveLeft();
			}
		}
}

	

}
